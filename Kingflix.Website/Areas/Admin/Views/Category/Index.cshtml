@model IEnumerable<Kingflix.Domain.DomainModel.Category>

@{
    ViewBag.Title = "Loại tài khoản";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="card">
    <div class="card-body">
        <h4 class="card-title mt-2">@ViewBag.Title</h4>
        <hr />
        @if (Model.Count() != 0)
        {
            <table class="table table-bordered table-hover"
                   data-toggle="table"
                   data-search="true"
                   data-sort-name="name"
                   data-sort-order="desc"
                   data-pagination="true"
                   data-page-size="10">
                <thead class="">
                    <tr>
                        <th class="text-left font-weight-bold" data-sortable="true"> Tên loại sản phẩm </th>
                        <th class="text-center font-weight-bold" data-sortable="true"> Ngày khởi tạo </th>
                        <th class="text-center font-weight-bold" data-sortable="true"> Trạng thái </th>
                        <th class="text-center font-weight-bold" data-sortable="true"> Hành động </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                <a href="@Url.Action("Edit", new { categoryId = item.CategoryId })" class="text-success">@Html.DisplayFor(modelItem => item.Name)</a>
                            </td>
                            <td class="text-center">
                                @item.DateCreated.ToString("dd/MM/yyyy HH:mm")
                            </td>
                            <td class="text-center">
                                @if (item.Status == Kingflix.Domain.Enumerables.Status.Public)
                                {
                                    <p class="m-0 badge badge-success">Đang bán</p>
                                }
                                else if (item.Status == Kingflix.Domain.Enumerables.Status.Private)
                                {
                                    <p class="m-0 badge badge-dark">Tạm ngưng bán</p>
                                }
                            </td>
                            <td class="text-center">
                                <a href="@Url.Action("Edit", new { categoryId = item.CategoryId })" class="badge badge-warning" data-toggle="tooltip" title="Chỉnh sửa">
                                    <i class="mdi mdi-lead-pencil"></i>
                                </a>
                                @if (item.CategoryId != NETFLIX0 && item.CategoryId != NETFLIX1 && item.CategoryId != NETFLIX2 && item.CategoryId != NETFLIX3 && item.CategoryId != "SPOTIFY")
                                {
                                    <a href="#" class="badge badge-danger delete" data-toggle="tooltip" data-id="@item.CategoryId" data-name="@item.Name" title="Xóa">
                                        <i class="mdi mdi-delete"></i>
                                    </a>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <p class="text-center">Không có dữ liệu</p>
            <div class="text-center">
                <a href="@Url.Action("Create")" class="btn btn-gradient-primary btn-sm btn-rounded">Thêm loại tài khoản</a>
            </div>

        }
    </div>
</div>

@section scripts {
    <script>
        $(document).on("click", ".delete", function () {
            var id = $(this).data("id");
            var r = confirm("Bạn có muốn xóa bài viết '" + $(this).data("name") + "' hoàn toàn không?");
            if (r == true) {
                loadSpinner();
                $.ajax({
                    method: "POST",
                    url: "@Url.Action("Delete")",
                    data: { id: id },
                    success: function (data) {
                        if (data.status == "success") {
                            toastr.success(data.message);
                            setTimeout(function () {
                                location.reload();
                            }, 2000)
                        }
                        else {
                            toastr.error(data.message);
                            exitSpinner();
                        }
                    },
                    error: function () {
                        exitSpinner();
                        toastr.error("Có lỗi xảy ra. Vui lòng thử lại");
                    }
                })
            }
        })
    </script>
}