@using Kingflix.Domain.Enumerables
@model Kingflix.Domain.DomainModel.Voucher

<div class="modal-header border-0 pb-0">
    <h4 class="card-title font-weight-bold mb-0">Chỉnh sửa Voucher</h4>
    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        <span aria-hidden="true" class="mdi mdi-close"></span>
    </button>
</div>
<div class="modal-body">
    @using (Ajax.BeginForm("Edit", "Voucher", new AjaxOptions
    {
        HttpMethod = "POST",
        OnBegin = "loadSpinner",
        OnComplete = "exitSpinner",
        OnSuccess = "editVoucherSuccess"
    }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(a => a.DateCreated)
        @Html.HiddenFor(a => a.VoucherId)
        <div class="row">
            <div class="col-md-8">
                <div class="form-group mb-4 mt-0">
                    @Html.TextBoxFor(model => model.Name, new { @class = "form-control bg-white", @placeholder = "Tên Voucher (VD: Giảm 50% tối đa 30.000 trên toàn bộ các gói)" })
                    <div class="mt-1">
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="card">
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.VoucherFor, htmlAttributes: new { @class = "control-label" })
                                    @Html.EnumDropDownListFor(model => model.VoucherFor, htmlAttributes: new { @class = "form-control select2-hidden-search" })
                                    <div class="mt-2">
                                        @Html.ValidationMessageFor(model => model.VoucherFor, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.VoucherId, htmlAttributes: new { @class = "control-label" })
                                    <input class="form-control" type="text" value="@Model.VoucherId" disabled style="cursor: not-allowed">
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label" })
                                    @Html.EnumDropDownListFor(model => model.Type, htmlAttributes: new { @class = "form-control select2-hidden-search" })
                                    <div class="mt-2">
                                        @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Value, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.Value, new { htmlAttributes = new { @class = "form-control" } })
                                    <div class="mt-2">
                                        @Html.ValidationMessageFor(model => model.Value, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6" id="MaxMoneyArea" style="display: @(Model.Type == VoucherType.Both?"block":"none");">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.MaxMoney, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.MaxMoney, new { htmlAttributes = new { @class = "form-control" } })
                                    <div class="mt-2">
                                        @Html.ValidationMessageFor(model => model.MaxMoney, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.DateEnd, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.DateEnd, new { htmlAttributes = new { @class = "form-control" } })
                                    <div class="mt-2">
                                        @Html.ValidationMessageFor(model => model.DateEnd, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.PolicyContent, htmlAttributes: new { @class = "control-label" })
                                    @Html.TextAreaFor(model => model.PolicyContent, new { @class = "form-control bg-white textarea text-area-1", @placeholder = "Nhập điều kiện chi tiết ở đây", rows = "6" })
                                    <div class="mt-1">
                                        @Html.ValidationMessageFor(model => model.PolicyContent, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <p class="font-weight-bold mb-1">Khuyến mãi này áp dụng cho</p>
                        <div class="row">
                            @foreach (var i in ViewBag.Category)
                            {
                                var check = false;
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <div class="form-check form-check-success">
                                            <label class="form-check-label text-white">
                                                @foreach (var j in Model.Voucher_Category)
                                                {
                                                    if (i.CategoryId == j.CategoryId)
                                                    {
                                                        <input type="checkbox" class="form-check-input" name="VoucherCategory" id="VoucherCategory" value="@i.CategoryId" checked="checked">@i.Name <i class="input-helper"></i>
                                                        check = true;
                                                        break;
                                                    }
                                                }
                                                @if (!check)
                                                {

                                                    <input type="checkbox" class="form-check-input" name="VoucherCategory" id="VoucherCategory" value="@i.CategoryId">@i.Name <i class="input-helper"></i>

                                                }
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                @*Submit Form Card*@
                <div class="card">
                    <div class="card-header">
                        <h6 class="">Trạng thái Voucher</h6>
                    </div>
                    <div class="card-body py-0">
                        <div class="form-group row">
                            <div class="col-md-7">
                                @Html.EnumDropDownListFor(model => model.Status, htmlAttributes: new { @class = "form-control select2-hidden-search" })
                            </div>
                            <div class="col-md-5">
                                <button type="submit" id="submitFormButton" class="btn btn-gradient-primary btn-rounded btn-block">Hoàn tất</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<script>
        $("#Type").on("change", function () {
            var elm = $("#MaxMoneyArea")
            if ($(this).val() == 2) {
                elm.show();
            }
            else {
                elm.hide();
            }
        })

        $("#VoucherFor").on("change", function () {
            var elm = $("#applyFor")
            if ($(this).val() == 0) {
                elm.show();
            }
            else {
                elm.hide();
            }
        })

        var timer;
        var timeout = 1000;

        $(function () {
            $('#DateEnd').datetimepicker({
                format: "L",
                locale: moment.locale("vi"),
                icons: {
                    previous: 'mdi mdi-chevron-left',
                    next: 'mdi mdi-chevron-right',
                },
            })
        });

        $('#VoucherId').keyup(function () {
            var voucherId = $(this).val();
            clearTimeout(timer);
            if (voucherId) {
                timer = setTimeout(function () {
                    $.ajax({
                        method: "POST",
                        url: "@Url.Action("CheckVoucherId")",
                        data: {
                            voucherId: voucherId
                        },
                        success: function (data) {
                            if (data == "found") {
                                $("#checkName").html('<p class="m-0 text-danger">Mã ' + voucherId + " có thể tạo được</div>");
                            }
                            else {
                                $("#checkName").html('<p class="m-0 text-success">Mã ' + voucherId + " có thể tạo được</div>");
                            }
                        }
                    });

                }, timeout);
            }
            else {
                $("#checkName").html("");
            }
        });
        function editVoucherSuccess(data) {
             if (data.status == "success") {
            toastr.success(data.message);
            setTimeout(function () {
                location.reload();
            }, 1000);
        }
        else {
            toastr.error(data.message);
        }
    }
    $(function () {
        // Summernote
        $('.textarea').summernote({
            height: 500,
            focus: true,
            toolbar: [
                ['style', ['style']],
                ['style', ['bold', 'italic', 'underline', 'clear']],
                ['fontsize', ['fontsize']],
                ['color', ['color']],
                ['para', ['ul', 'ol', 'paragraph']],
                ['table', ['table']],
                ['insert', ['link', 'image', 'video']],
                ['view', ['fullscreen', 'codeview']],
            ],
            buttons: {
                image: uploadImageButton
            },
            callbacks: {
                onPaste: function (e) {
                    var bufferText = ((e.originalEvent || e).clipboardData || window.clipboardData).getData('Text');
                    e.preventDefault();
                    document.execCommand('insertText', false, bufferText);
                }
            }
        });
    });
    var textAreaId = 0;
    var textareaClass = '';
    var uploadImageButton = function () {
        var id = textAreaId;
        var ui = $.summernote.ui;
        var button = ui.button({
            className: "imageTextarea_" + id,
            contents: '<i class="note-icon-picture"/>',
            tooltip: 'Upload hình ảnh',
            click: function () {
                textareaClass = '.text-area-' + id;
                $(textareaClass).summernote('editor.saveRange');
                $("#ModalTemplate-Img").modal("show");
                loadLibraryImage(false, null, true);
            }
        });
        textAreaId++;
        return button.render();
    }
</script>