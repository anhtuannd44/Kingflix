@using Kingflix.Domain.Enumerables
@model IEnumerable<Kingflix.Domain.DomainModel.Order>

@{
    ViewBag.Title = "Danh sách đơn hàng";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="card">
    <div class="card-body">
        <div class="clearfix">
            <h4 class="float-left card-title mt-2">Danh sách đơn hàng</h4>
            <ul class="float-right nav-custom mt-2 mb-0 pl-0">
                <li><a class="nav-a" id="Null" href="@Url.Action("Index")"><i class="mdi mdi-calendar-multiple-check mr-1"></i>Tất cả</a></li>
                <li><a class="nav-a" id="WaitingForPay" href="@Url.Action("Index", new {status = OrderStatus.WaitingForPay})"><i class="mdi mdi-calendar-remove mr-1"></i>Chưa thanh toán</a></li>
                <li><a class="nav-a" id="Paid" href="@Url.Action("Index", new {status = OrderStatus.Paid})"><i class="mdi mdi-calendar-remove mr-1"></i>Đang xử lý</a></li>
                <li><a class="nav-a" id="Done" href="@Url.Action("Index", new {status = OrderStatus.Done})"><i class="mdi mdi-calendar-check mr-1"></i>Đã hoàn thành</a></li>
                <li><a class="nav-a" id="Cancelled" href="@Url.Action("Index", new {status = OrderStatus.Cancelled})"><i class="mdi mdi-delete mr-1"></i>Đã hủy</a></li>
                <li><a class="nav-a" id="acceptPaymentFalse" href="@Url.Action("Index", new {isAcceptPayment = false})"><i class="mdi mdi-clock mr-1"></i>Chưa xác nhận thanh toán</a></li>
            </ul>
        </div>
        <hr />
        <div id="orderList">
            @if (Model.Count() != 0)
            {
                <table class="table table-bordered table-hover"
                       id="tableSort"
                       data-toggle="table"
                       data-search="true"
                       data-sort-name="name"
                       data-sort-order="desc"
                       data-pagination="true"
                       data-page-size="20">
                    <thead>
                        <tr>
                            <th class="font-weight-bold" data-sortable="true"> Mã đơn hàng </th>
                            <th class="font-weight-bold" data-sortable="true"> Chi tiết </th>
                            <th class="text-center font-weight-bold" data-sortable="true"> Email/SĐT</th>
                            <th class="text-center font-weight-bold" data-sortable="true"> Thời gian đặt</th>
                            <th class="text-center font-weight-bold" data-sortable="true"> Tổng cộng </th>
                            <th class="text-center font-weight-bold" data-sortable="true"> Loại </th>
                            <th class="text-center font-weight-bold" data-sortable="true"> Trạng thái </th>
                            <th class="text-center font-weight-bold"> Hành động </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    <p class="text-success mb-0">@item.OrderId</p>
                                </td>
                                <td class="">
                                    @if (item.Type == OrderType.Order)
                                    {
                                        <p class="m-0">
                                            @foreach (var details in item.OrderDetails)
                                            {
                                                <span>- @details.CategoryName (@details.Month tháng)</span><br />
                                            }
                                        </p>
                                    } 
                                    else if (item.Type == OrderType.GiftCode)
                                    {
                                        foreach (var details in item.OrderDetails)
                                        {
                                            <p class="m-0 font-weight-normal"><i class="mdi mdi-check-decagram text-success"></i> @details.CategoryName (@details.Month tháng)</p>
                                        }
                                        if (item.IsDelivery)
                                        {
                                            <p class="m-0 font-weight-normal"><i class="mdi mdi-check-decagram text-warning"></i> Giao thiệp tận nơi @*<span class="edit-delivery text-danger" style="cursor: pointer" data-order-id="@item.OrderId">(Chỉnh sửa)</span>*@</p>
                                            <p class="m-0 font-weight-normal">- Người nhận: @item.DeliveryName</p>
                                            <p class="m-0 font-weight-normal">- Địa chỉ: @item.DeliveryAddress </p>
                                            <p class="m-0 font-weight-normal">- Thời gian: @item.DeliveryTime.Value.ToString("dd/MM/yyyy")</p>
                                        }
                                    }
                                </td>
                                <td class="text-left">
                                    @item.UserInformation.Email <br /><span class="text-warning">@item.UserInformation.PhoneNumber</span>
                                </td>
                                <td class="text-center">
                                    @string.Format("{0:dd/MM/yyyy HH:mm }", item.DateCreated)
                                </td>
                                <td class="text-center">
                                    <p class="m-0">
                                        @string.Format("{0:C0}", item.Price)
                                    </p>
                                    <p class="m-0 text-info font-weight-bold">@(item.PaymentId != null ? item.Payments.Name : "Chưa xác định")</p>
                                </td>
                                <td class="text-center">
                                    @if (item.Type == OrderType.Order)
                                    {
                                        <p class="badge badge-warning">Mua mới</p>
                                    }
                                    else if (item.Type == OrderType.Extend)
                                    {
                                        <p class="badge badge-info">Gia hạn</p>
                                    }
                                    else
                                    {
                                        <p class="badge badge-success">Giftcode</p>
                                    }
                                </td>
                                <td class="text-center">
                                    @if (item.Type == OrderType.GiftCode)
                                    {
                                        if (item.IsUserGiftCode)
                                        {
                                            <span class="badge badge-success"> Đã sử dụng </span>
                                        }
                                        else if (item.Status == OrderStatus.Done)
                                        {
                                            <span class="badge badge-success">@OrderStatus.Done.GetEnumDisplayName()</span> 
                                        }
                                        else if (item.Status == OrderStatus.Cancelled)
                                        {
                                            <span class="badge badge-danger">@OrderStatus.Cancelled.GetEnumDisplayName()</span> 
                                        }
                                    }
                                    else if (item.Status == OrderStatus.Done)
                                    {
                                        <span class="badge badge-success">@OrderStatus.Done.GetEnumDisplayName()</span> 
                                    }
                                    else if (item.Status == OrderStatus.WaitingForPay)
                                    {
                                        <span class="badge badge-warning">@OrderStatus.WaitingForPay.GetEnumDisplayName()</span> 
                                    }
                                    else if (item.Status == OrderStatus.Paid)
                                    {
                                        <span class="badge badge-warning">@OrderStatus.Paid.GetEnumDisplayName()</span>
                                    }
                                    else if (item.Status == OrderStatus.Cancelled)
                                    {
                                        <span class="badge badge-danger">@OrderStatus.Cancelled.GetEnumDisplayName()</span>
                                    }
                                </td>
                                <td class="text-center">
                                    @if (item.Status == OrderStatus.WaitingForPay || item.Status == OrderStatus.Paid)
                                    {
                                        <p class="badge badge-success order-success" style="cursor: pointer" data-order-id="@item.OrderId">
                                            <i class="mdi mdi-check"></i>
                                        </p>
                                        <a href="@Url.Action("Edit", new { orderId = item.OrderId })" class="badge badge-warning">
                                            <i class="mdi mdi-eye"></i>
                                        </a>
                                        <p class="badge badge-danger order-cancel-note" style="cursor: pointer" data-order-id="@item.OrderId">
                                            <i class="mdi mdi-close"></i>
                                        </p> 
                                    }
                                    else if (item.Status == OrderStatus.Done)
                                    {
                                        <p style="cursor: pointer" class="badge badge-warning cancel-note-details">
                                            <i class="mdi mdi-eye"></i>
                                        </p> 
                                    }
                                    else if (item.Status == OrderStatus.Cancelled)
                                    {
                                        <a href="@Url.Action("Edit", new { orderId = item.OrderId })" class="badge badge-warning">
                                            <i class="mdi mdi-eye"></i>
                                        </a>
                                        <p class="badge badge-danger cancel-details" style="cursor: pointer" data-details="@item.CancelNote" data-order-id="@item.OrderId">
                                            <i class="mdi mdi-comment-question-outline"></i>
                                        </p>
                                    }
                                </td>
                            </tr>
                            }
                    </tbody>
                </table> 
                }
                else
                {
                    <p class="text-center">Không tìm thấy đơn hàng</p>           
                }
        </div>
    </div>
</div>

<div class="modal fade" id="ModalCancel" aria-hidden="true" tabindex='-1'>
    <div class="modal-dialog position-relative modal-dialog-centered">
        <div class="modal-content" id="modalContent" style="min-height: 150px;">
            <div class="modal-header border-0 pb-0">
                <h4 class="card-title font-weight-bold mb-0">Hủy đơn hàng</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true" class="mdi mdi-close"></span>
                </button>
            </div>
            <div class="modal-body p-4">
                <p>Lý do hủy đơn cho đơn hàng "<span id="orderIdModal"></span>":</p>
                <textarea class="form-control shadow" rows="7" placeholder="Lý do hủy đơn cho đơn hàng (Có thể ghi hoặc không)" id="cancelNote"></textarea>
                <div class="mt-3 text-center">
                    <button type="button" class="btn btn-primary btn-rounded btn-sm btn-order-cancel" id="btnOrderCancel" value="">Xác nhận</button>
                    <button type="button" class="btn btn-dark btn-rounded btn-sm" data-dismiss="modal">Hủy bỏ</button>
                </div>
            </div>
        </div>
    </div>
</div>


@section scripts {
    <script>
        var status = "@(ViewBag.Status==null?"Null":ViewBag.Status)";
        var isAcceptPayment = "@ViewBag.IsAcceptPayment";
        $(function () {
            if (isAcceptPayment == "False") {
                $("#acceptPaymentFalse").addClass("active");
            }
            else {
                $("#" + status).addClass("active");
            }
        })
        $('#userName').on('select2:select', function (e) {
            var userId = e.params.data.id;
            if (window.location.href.indexOf('&') != -1) {
                window.location = "@Url.Action("Index",new { status = ViewBag.Status, orderBy = ViewBag.OrderBy})" + "&userId=" + userId;
            }
            else {
                window.location = "@Url.Action("Index")" + "?userId=" + userId;
            }
        });

        $(document).on("click", ".order-success", function () {
            loadSpinner();
            var orderId = $(this).data("order-id");
            actionWithOrder(orderId, "@OrderStatus.Done", null, true);
        })
        $(document).on("click", ".cancel-details", function () {
            $("#orderIdModal").html($(this).data("order-id"));
            $("#cancelNote").val($(this).data("details"));
            $("#btnOrderCancel").val($(this).data("order-id"));
            $("#ModalCancel").modal("show");
        })

        $(document).on("click", ".order-cancel", function () {
            $("#orderIdModal").html($(this).data("order-id"));
            $("#btnOrderCancel").val($(this).data("order-id"));
            $("#ModalCancel").modal("show");
        })
        $(document).on("click", ".btn-order-cancel", function(){
            loadSpinner();
            var orderId = $(this).val();
            var cancelNote = $("#cancelNote").val();
            actionWithOrder(orderId, "@OrderStatus.Cancelled",cancelNote, true);
        })

        function actionWithOrder(id, status, cancelNote, isConfirmUserAccount) {
            $.ajax({
                method: "POST",
                url: "@Url.Action("UpdateOrder")",
                data: {
                    orderId: id,
                    status: status,
                    cancelNote: cancelNote,
                    confirmUserAccount: isConfirmUserAccount
                },
                success: function (data) {
                    if (data.status == "success") {
                        toastr.success(data.message);
                        setTimeout(function () {
                            window.location.href = '@Url.Action("Index", new {status = OrderStatus.WaitingForPay })';
                        }, 1000);
                    }
                    else {
                        toastr.error(data.message);
                    }
                },
                error: function () {
                    toastr.error("Lỗi khi gửi dữ liệu!");
                },
                complete: function () {
                    exitSpinner();
                }
            })
        }
    </script>
}