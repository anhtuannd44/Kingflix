@using Kingflix.Domain.Enumerables
@using Kingflix.Domain.DomainModel
@model Kingflix.Domain.DomainModel.Order

@{
    ViewBag.Title = "Chi tiết đơn hàng";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
    string base64 = "", imgSrc = "";
    if (Model.File != null)
    {
        base64 = Convert.ToBase64String(Model.File);
        imgSrc = String.Format("data:image/gif;base64,{0}", base64);
    }
    int i = 0;
}

@using (Ajax.BeginForm("Edit", "OrderAdmin", new AjaxOptions
{
    HttpMethod = "POST",
    OnBegin = "loadSpinner",
    OnSuccess = "updateOrderSuccess",
    OnComplete = "exitSpinner"
}, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(a => a.OrderId)
    <div class="row">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <h4 class="card-title">Thông tin đơn hàng</h4>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.OrderId, htmlAttributes: new { @class = "control-label" })
                                <input name="OrderId" id="OrderId" type="text" class="form-control" disabled value="@Model.OrderId" />
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.DateCreated, htmlAttributes: new { @class = "control-label" })
                                <input name="DateCreated" id="DateCreated" type="text" class="form-control" disabled value="@string.Format("{0:dd/MM/yyyy HH:mm}", Model.DateCreated)" />
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.UserInformation.FullName, htmlAttributes: new { @class = "control-label" })
                                <input name="OrderId" id="OrderId" type="text" class="form-control" disabled value="@Model.UserInformation.FullName" />
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                                <div class="mt-2">
                                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.VoucherId, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.VoucherId, new { htmlAttributes = new { @class = "form-control" } })
                                <div class="mt-2">
                                    @Html.ValidationMessageFor(model => model.VoucherId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            @foreach (var item in Model.OrderDetails)
            {
                <div class="card">
                    <div class="card-header">
                        <h4 class="card-title">Thông tin đơn hàng</h4>
                    </div>
                    <div class="card-body">
                        @Html.Hidden("OrderDetails["+i+"].OrderDetailsId", item.OrderDetailsId)
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="lable-control">Gói sản phẩm</label>
                                    <select name="OrderDetails[@i].CategoryId" class="select2 select-hidden-search">
                                        @foreach (var category in (List<Category>)ViewData["CategoryId"])
                                        {
                                            <option value="@category.CategoryId" @(category.CategoryId == item.CategoryId ? "selected" : "")>@category.Name</option>
                                            }
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="lable-control">Số tháng</label>
                                    @Html.TextBox("OrderDetails[" + i + "].Month", item.Month, new { @class = "form-control" })
                                    <div class="mt-2">
                                        @Html.ValidationMessageFor(model => item.Month, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            @if (!item.IsKingflixAccount)
                            {
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="lable-control">UserName của người dùng</label>
                                        @Html.TextBox("OrderDetails[" + i + "].UserAccount", item.UserAccount, new { @class = "form-control" })
                                        <div class="mt-2">
                                            @Html.ValidationMessageFor(model => item.UserAccount, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="lable-control">Mật khẩu TK người dùng</label>
                                        @Html.TextBox("OrderDetails[" + i + "].UserPassword", item.UserPassword, new { @class = "form-control" })
                                        <div class="mt-2">
                                            @Html.ValidationMessageFor(model => item.UserPassword, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
                i++;
            }
            <div class="card">
                <div class="card-header">
                    <h4 class="card-title">Thông tin thanh toán</h4>
                </div>
                <div class="card-body">
                    <p>Hình thức thanh toán: <span class="font-weight-bold">@Model.Payments.Name</span></p>
                    <p>Số tiền thanh toán: <span class="font-weight-bold">@string.Format("{0:C0}", Model.Price)</span></p>
                    <p>Bằng chứng thanh toán:</p>
                    @if (!string.IsNullOrEmpty(imgSrc))
                    {
                        <img src="@imgSrc" width="300" />
                    }
                    else
                    {
                        <p class="text-danger">Chưa có bằng chứng thanh toán</p>
                    }
                </div>
            </div>
        </div>
        <div class="col-md-4">
            @*Submit Form Card*@
            <div class="card">
                <div class="card-header">
                    <h6 class="">Chọn trạng thái xử lý</h6>
                </div>
                <div class="card-body py-0">
                    <div class="form-group">
                        @Html.EnumDropDownListFor(model => model.Status, htmlAttributes: new { @class = "form-control select2-hidden-search" })
                    </div>
                    <div class="form-group">
                        <button type="submit" id="submitFormButton" class="btn btn-gradient-success btn-rounded btn-block btn-sm">Cập nhật</button>
                    </div>
                    <p class="font-italic" style="display: none;" id="doneStatus">Sau khi xác nhận "Hoàn tất". Bạn không thể chỉnh sửa lại đơn hàng này.</p>
                    <p class="font-italic" style="display: none;" id="cancelStatus">Sau khi xác nhận "Đã hủy". Bạn không thể chỉnh sửa lại đơn hàng này.</p>
                </div>
            </div>
            <div class="card" id="cancelNote" style="display: @(Model.Status == OrderStatus.Cancelled?"none":"block")">
                <div class="card-header">
                    <h6 class="">Thêm lý do hủy</h6>
                </div>
                <div class="card-body py-1">
                    <div class="form-group row">
                        @Html.TextAreaFor(model => model.CancelNote, new { @class = "form-control", @rows = 7 })
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(function () {
            $.validator.methods.date = function (value, element) {
                return this.optional(element) || moment(value, "DD.MM.YYYY", true).isValid();
            }
        });
        $(document).on("change", "#Status", function () {
            if ($("#Status option:selected").text() == "Hoàn tất") {
                $("#doneStatus").show();
                $("#cancelStatus").hide();
                $("#cancelNote").hide();
            }
            else if ($("#Status option:selected").text() == "Đã hủy") {
                $("#cancelStatus").show();
                $("#doneStatus").hide();
                $("#cancelNote").show();
            }
            else {
                $("#cancelStatus").hide();
                $("#doneStatus").hide();
                $("#cancelNote").hide();
            }
        });

        function updateOrderSuccess(data) {
            if (data.status == "success") {
                toastr.success(data.message);
                setTimeout(function () {
                    window.location.href = '@Url.Action("Index", new {status = OrderStatus.WaitingForPay })';
                }, 1000);
            }
            else {
                toastr.error(data.message);
            }
        }
    </script>
}
