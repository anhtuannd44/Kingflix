@using Kingflix.Domain.Enumerables
@model Kingflix.Website.Models.UserViewModel
@{
    ViewBag.Title = "Thông tin tài khoản";
    Layout = "~/Views/Shared/_ManageLayout.cshtml";
    string base64 = "", imgSrc = "";
    if (Model.Avatar != null)
    {
        base64 = Convert.ToBase64String(Model.Avatar);
        imgSrc = String.Format("data:image/gif;base64,{0}", base64);
    }
}

<div class="user-information mt-3">
    <div class="card">
        <div class="card-body">
            <div class="clearfix">
                <h3 class="float-left mb-0 card-title">Tài khoản</h3>
                <div class="float-right">
                    <p class="btn btn-light mb-0 btn-sm btn-rounded px-2" data-toggle="modal" data-target="#UserInformationModal">Sửa thông tin</p>
                    <p class="btn btn-primary mb-0 btn-sm btn-rounded" data-toggle="modal" data-target="#ChangePassword">Đổi mật khẩu</p>
                </div>
            </div>
            <hr />
            <div class="user-information-details">
                <div class="row text-white">
                    <div class="col-md-6">
                        <div class="row">
                            <div class="col-md-5 col-6">
                                <p class="font-weight-bold mb-0">Email:</p>
                            </div>
                            <div class="col-md-7 col-6">
                                <p class="mb-0">@Model.Email</p>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-5 col-6">
                                <p class="font-weight-bold mb-0">Họ và tên:</p>
                            </div>
                            <div class="col-md-7 col-6">
                                <p class="mb-0">@Model.FullName</p>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-5 col-6">
                                <p class="font-weight-bold mb-0">Số điện thoại:</p>
                            </div>
                            <div class="col-md-7 col-6">
                                <p class="mb-0">@(string.IsNullOrEmpty(Model.PhoneNumber) ? "Chưa cập nhật" : Model.PhoneNumber)</p>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-5 col-6">
                                <p class="font-weight-bold mb-0">Giới tính:</p>
                            </div>
                            <div class="col-md-7 col-6">
                                @if ((int)Model.Gentle == (int)Gentle.Man)
                                {
                                    <p class="mb-0">@Gentle.Man.GetEnumDisplayName()</p>
                                }
                                else if ((int)Model.Gentle == (int)Gentle.Women)
                                {
                                    <p class="mb-0">@Gentle.Women.GetEnumDisplayName()</p>
                                }
                                else if ((int)Model.Gentle == (int)Gentle.Other)
                                {
                                    <p class="mb-0">@Gentle.Other.GetEnumDisplayName()</p>
                                }
                                else
                                {
                                    <p class="mb-0">Chưa cập nhật</p>
                                }
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-5 col-6">
                                <p class="font-weight-bold mb-0">Ngày sinh:</p>
                            </div>
                            <div class="col-md-7 col-6">
                                <p class="mb-0">@(Model.Birthday == null ? "Chưa cập nhật" : string.Format("{0:dd/MM/yyyy}", Model.Birthday))</p>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-5">
                                <p class="font-weight-bold mb-0">Địa chỉ:</p>
                            </div>
                            <div class="col-md-7 col-6">
                                <p class="mb-0">@(string.IsNullOrEmpty(Model.Address)?"Chưa cập nhật":Model.Address)</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="card">
    <div class="card-header">
        <h3 class="card-title m-0" style="cursor: pointer" data-toggle="collapse" data-target="#policy" aria-expanded="true">Quy định sử dụng <i class="mdi mdi-arrow-down-drop-circle"></i></h3>
    </div>
    <div class="collapse show" id="policy">
    <div class="card-body">
        @Html.Action("GetSetting")
    </div>
    </div>
</div>
<div class="card">
    <div class="card-body">
        <div class="service">
            <div class="clearfix">
                <h3 class="card-title float-left">Thông tin dịch vụ</h3>
            </div>
            <hr />
            @Html.Action("GetProfile", new { Type = 0 })
            <hr class="my-4" />
            @Html.Action("GetProfile", new { Type = 1 })
        </div>
    </div>
</div>
<div class="card">
    <div class="card-body">
        <div class="feedback">
            <h3 class="card-title">Đánh giá</h3>
            <hr class="mb-0" />
            <div class="feedback-area mb-4">
                @if (Model.FeedbackStar == 0)
                {
                    <div class="rating" data-rate-value=5 style="font-size: 3rem; color: orange"></div>
                    <textarea id="FeedbackContent" class="form-control" rows="6" placeholder="Nhập đánh giá của bạn tại đây" required></textarea>
                    <div class="text-center">
                        <p class="btn btn-primary btn-sm px-5 mt-3 btn-rounded" id="sendFeedback">Gửi</p>
                    </div>
                }
                else
                {
                    <div id="userFeedback" style="pointer-events: none;">
                        <div class="rating" data-rate-value=@Model.FeedbackStar style="font-size: 3rem; color: orange"></div>
                        <textarea id="FeedbackContent" class="form-control" rows="6" placeholder="Nhập đánh giá của bạn tại đây" required>@Model.FeedbackContent</textarea>
                        <div class="text-center">
                            <p class="btn btn-success btn-sm px-5 mt-3 d-none btn-rounded" id="sendFeedback">Gửi</p>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="UserInformationModal" aria-hidden="true" tabindex='-1'>
    <div class="modal-dialog modal-xl modal-dialog-centered">
        <div class="modal-content" id="modalContent" style="min-height: 100px">
            <div class="modal-header border-0 pb-0">
                <h4 class="card-title font-weight-bold mb-0">Chỉnh sửa thông tin tài khoản</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true" class="mdi mdi-close"></span>
                </button>
            </div>
            <div class="modal-body p-5 mt-5">
                @using (Html.BeginForm("UpdateUserInformation", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    <div class="user-information-details">
                        <div class="row form-group align-items-center align-items-center">
                            <div class="offset-md-1 col-md-2">
                                <p class="font-weight-bold mb-0">Email:</p>
                            </div>
                            <div class="col-md-8">
                                <p class="" style="cursor: not-allowed;">@Model.Email</p>
                            </div>
                        </div>
                        <div class="row form-group align-items-center">
                            <div class="offset-md-1 col-md-2">
                                <p class="font-weight-bold mb-0">Họ và tên:</p>
                            </div>
                            <div class="col-md-8">
                                @Html.TextBoxFor(a => a.FullName, new { @class = "form-control shadow" })
                            </div>
                        </div>
                        <div class="row form-group align-items-center">
                            <div class="offset-md-1 col-md-2">
                                <p class="font-weight-bold mb-0">Số điện thoại:</p>
                            </div>
                            <div class="col-md-8">
                                @Html.TextBoxFor(a => a.PhoneNumber, new { @class = "form-control shadow" })
                            </div>
                        </div>
                        <div class="row form-group align-items-center">
                            <div class="offset-md-1 col-md-2">
                                <p class="font-weight-bold mb-0">Giới tính:</p>
                            </div>
                            <div class="col-md-8">
                                <select class="form-group select2-hidden-search" name="Gentle" id="Gentle">
                                    <option value="@Gentle.Man" @(Model.Gentle == Gentle.Man ? "selected" : "")>Nam</option>
                                    <option value="@Gentle.Women" @(Model.Gentle == Gentle.Women ? "selected" : "")>Nữ</option>
                                    <option value="@Gentle.Other" @(Model.Gentle == Gentle.Other ? "selected" : "")>Khác</option>
                                </select>
                            </div>
                        </div>
                        <div class="row form-group align-items-center">
                            <div class="offset-md-1 col-md-2">
                                <p class="font-weight-bold mb-0">Ngày sinh:</p>
                            </div>
                            <div class="col-md-8">
                                @Html.TextBoxFor(a => a.Birthday, new { @class = "form-control shadow" })
                            </div>
                        </div>
                        <div class="row form-group align-items-center">
                            <div class="offset-md-1 col-md-2">
                                <p class="font-weight-bold mb-0">Địa chỉ:</p>
                            </div>
                            <div class="col-md-8">
                                @Html.TextBoxFor(a => a.Address, new { @class = "form-control shadow" })
                            </div>
                        </div>
                        <div class="row form-group align-items-center">
                            <div class="offset-md-1 col-md-2">
                                <p class="font-weight-bold mb-0">Hình đại diện:</p>
                            </div>
                            <div class="col-md-8">
                                <label for="avatars" class="btn btn-primary btn-sm btn-rounded px-4">Chọn hình</label>
                                <input type='file' id="avatars" name="avatars" hidden />
                                <div>
                                    @if (string.IsNullOrEmpty(imgSrc))
                                    {
                                        <img id="previewAvatar" src="~/Content/image/No_Picture.jpg" alt="your image" height="100" />
                                    }
                                    else
                                    {
                                        <img id="previewAvatar" src="@imgSrc" alt="your image" height="100" />
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="text-center">
                        <p class="btn btn-light btn-rounded mb-0 btn-sm" data-dismiss="modal">Hủy</p>
                        <button type="submit" class="btn btn-gradient-primary btn-rounded btn-sm">Cập nhật thông tin</button>
                    </div>
                }

            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="ChangePassword" aria-hidden="true" tabindex='-1'>
    <div class="modal-dialog modal-xl modal-dialog-centered">
        <div class="modal-content" id="modalContent" style="min-height: 100px">
            <div class="modal-header border-0 pb-0">
                <h4 class="card-title font-weight-bold mb-0">Đổi mật khẩu</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true" class="mdi mdi-close"></span>
                </button>
            </div>
            <div class="modal-body p-5">
                @using (Ajax.BeginForm("ChangePassword", "Manage", new AjaxOptions
                {
                    HttpMethod = "POST",
                    OnBegin = "loadSpinner",
                    OnSuccess = "changePasswordSuccess",
                    OnComplete = "exitSpinner"
                }))
                {
                    @Html.AntiForgeryToken()
                    <div class="row form-group align-items-center">
                        <div class="offset-md-4 col-md-8">
                            @Html.ValidationSummary("", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row form-group align-items-center">
                        <div class="offset-md-1 col-md-2">
                            <p class="font-weight-bold mb-0">Mật khẩu cũ:</p>
                        </div>
                        <div class="col-md-8">
                            @Html.PasswordFor(a => a.OldPassword, new { @class = "form-control shadow" })
                        </div>
                    </div>
                    <div class="row form-group align-items-center">
                        <div class="offset-md-1 col-md-2">
                            <p class="font-weight-bold mb-0">Mật khẩu mới:</p>
                        </div>
                        <div class="col-md-8">
                            @Html.PasswordFor(a => a.NewPassword, new { @class = "form-control shadow" })
                        </div>
                    </div>
                    <div class="row form-group align-items-center">
                        <div class="offset-md-1 col-md-2">
                            <p class="font-weight-bold mb-0">Xác nhận mật khẩu:</p>
                        </div>
                        <div class="col-md-8">
                            @Html.PasswordFor(a => a.ConfirmPassword, new { @class = "form-control shadow" })
                        </div>
                    </div>
                    <div class="text-center">
                        <p class="btn btn-light btn-rounded mb-0 btn-sm" data-dismiss="modal">Hủy</p>
                        <button type="submit" class="btn btn-gradient-primary btn-rounded btn-sm">Đổi mật khẩu</button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#previewAvatar').attr('src', e.target.result);
                }
                reader.readAsDataURL(input.files[0]);
            }
        }

        $("#avatars").change(function () {
            readURL(this);
        });

        var options = {
            max_value: 5,
            step_size: 0.5,
            initial_value: 4,
            selected_symbol_type: 'utf8_star',
            cursor: 'pointer',
            readonly: false,
            change_once: false,
        };

        $(".rating").rate(options);

        $.validator.methods.date = function (value, element) {
                return this.optional(element) || moment(value, "L", true).isValid();
            }

        $('#Birthday').datetimepicker({
            format: "L",
            locale: moment.locale("vi"),
            icons: {
                previous: 'mdi mdi-chevron-left',
                next: 'mdi mdi-chevron-right',
            },
        })

        $("#sendFeedback").click(function () {
            $.ajax({
                method: "POST",
                url: "@Url.Action("SendFeedback")",
                data: {
                    star: $(".rating").rate("getValue"),
                    content: $("#FeedbackContent").val()
                },
                beforeSend: function () {
                        loadSpinner();
                    },
                success: function (data) {
                        if (data.status == "success") {
                            toastr.success(data.message);
                            exitSpinner();
                        }
                    }
                })
        })

        function changePasswordSuccess(data) {
            if (data.Succeeded == true) {
                toastr.success("Mật khẩu đã được thay đổi");
                $("#ChangePassword").modal("hide");
            }
            else {
                if (data.Errors == "Passwords must have at least one uppercase (\u0027A\u0027-\u0027Z\u0027)." || data.Errors == "Passwords must have at least one lowercase (\u0027a\u0027-\u0027z\u0027)." || data.Errors == "Passwords must have at least one lowercase (\u0027a\u0027-\u0027z\u0027). Passwords must have at least one uppercase (\u0027A\u0027-\u0027Z\u0027).") {
                    toastr.error("Mật khẩu phải có ít nhất 1 ký tự in hoa và in thường");
                }
                else if (data.Errors == "Incorrect password.") {
                    toastr.error("Mật khẩu cũ chưa chính xác");
                }
            }
            exitSpinner();
        }

        $(".show-link").click(function () {
            $("#promoCodeLink").show();
            $(".show-link").hide();
        });


        $(document).on("click", ".extend", function () {
            var profileId = $(this).data("id");
            $.ajax({
                method: "POST",
                url: "@Url.Action("Extend")",
                data: {
                    profileId: profileId
                },
                beforeSend: function () {
                    loadSpinner();
                },
                success: function (data) {
                    $("#modalContentLg").html(data);
                },
                error: function () {
                    toastr.error("Có lỗi khi gửi dữ liệu, vui lòng thử lại!");
                    $("#ModalTemplateLg").modal("hide");
                },
                complete: function () {
                    exitSpinner();
                }
            })
        })

        $(document).on("change", "#ProductId", function () {
            var productId = $(this).val();
            $.ajax({
                method: "POST",
                url: "@Url.Action("GetProfileExtend","Manage")",
                data: {
                    productId: productId
                },
                beforeSend: function () {
                    loadSpinner();
                },
                success: function (data) {
                    $("#profileArea").html(data)
                },
                error: function () {
                    toastr.error("Có lỗi khi gửi dữ liệu, vui lòng thử lại!")
                },
                complete: function () {
                    exitSpinner();
                }
            })
        })
       
        $(document).on("change", "#Month", function () {
            LoadPaymentDetail();
        })
        $(document).on("change", "#ProfileId", function () {
            LoadPaymentDetail();
        })
        $(document).on("change","#PaymentId",function () {
            LoadPaymentDetail();
        })
        function LoadPaymentDetail() {
            var id = $("#PaymentId").val();
            var profile = [];
            $(".profile-id").each(function (index, el) {
                if ($(this).is(":checked")) {
                    profile[index] = $(this).val();
                }
            })
            var month = $("#Month").val();
            $.ajax({
                method: "POST",
                url: "@Url.Action("GetPaymentDetails","Manage")",
                data: {
                    id: id,
                    ProfileId: profile,
                    Month: month
                },
                success: function (data) {
                    $("#paymentDetails").html(data);
                },
                error: function (data) {
                    toastr.error("Chưa đủ điều kiện: Chọn Profile, chọn tháng và phương thức thanh toán");
                    $("#submitButton").html("");
                }
            })
        }
        @*$(document).on("click", "#formSubmit", function () {
            var promoCode = $("#promoCode").val();
            if (promoCode != null) {
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("CheckPromotion")",
                    data: {
                        promoCode = promoCode
                    },
                    success: function (data) {
                        $("#orderInformation").html(data);
                        if ($("#voucher").val() != "") {
                            if ($("#giamGia").text() == "-00 ₫") {
                                toastr.error("Mã khuyến mãi không tồn tại hoặc hết hạn!");
                                $("#voucher").val("");
                                $("#voucher-notice").html("");
                            }
                            else {
                                toastr.success("Đã áp dụng Khuyến mãi thành công! Kéo xuống để kiểm tra!");
                                $("#voucher-notice").html($("#voucherNameText").text());
                            }
                        }
                    }
                });
            }
        })*@
    </script>
}
